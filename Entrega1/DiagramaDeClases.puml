@startuml
'https://plantuml.com/class-diagram

class Gps{
    + empezarJuego()
}

class Jugador{
    - nombre

    + moverArriba()
    + moverAtras()
}

abstract Vehiculo{
    - movimientos
    + movermeHacia(unMovimiento:Movimiento)
    + cambiar()
}

interface Accionable{
    +Accionar(Vehiculo)
}

class Moto{
    + moverArriba()
    + moveratras()
    + cambiar()
}
class Auto{
    + moverArriba()
    + moveratras()
    + cambiar()
}

class 4x4{
    + moverArriba()
    + moveratras()
    + cambiar()
}

class Ciudad{
    + generarMatriz()
    + colocarObjetos()
}

class Posicion{
    - x
    - y
    + incrementarX()
    + decrementarY()
}

interface Sorpresa{
    + sorprender(Vehiculo);
}

class Favorable{
    + sorprender(Vehiculo)
    + accionar(Vehiculo)
}

class Desfavorable{
    + sorprender(Vehiculo)
    + accionar(Vehiculo)
}

class CambioVehiculo{
    + sorprender(Vehiculo)
    + accionar(Vehiculo)
}

interface Obstaculo{
    + sumarMovimientos(Vehiculo)
}

class Pozo{
    + sumarMovimientos(Vehiculo)
     + accionar(Vehiculo)
}

class Piquete{
    + sumarMovimientos(Vehiculo)
    + accionar(Vehiculo)
}

class ControlPolicial{
    + sumarMovimientos(Vehiculo)

}


Moto ..|> Vehiculo
Auto ..|> Vehiculo
4x4 ..|> Vehiculo
Gps --> Jugador
Gps --> Ciudad
Vehiculo --> Posicion
Pozo ..|> Obstaculo

Piquete ..|> Obstaculo

ControlPolicial ..|> Obstaculo

Grilla "1" --> "*" Accionable
Ciudad --> Vehiculo
Ciudad --> Grilla
Favorable ..|> Sorpresa

Desfavorable ..|> Sorpresa

CambioVehiculo ..|> Sorpresa


Sorpresa ..|> Accionable
Obstaculo ..|> Accionable

interface Movimiento{
+aplicarMovimiento()
}

class Arriba{
+aplicarMovimiento()
}
class atras{
+aplicarMovimiento()
}
class Derecha{
+aplicarMovimiento()
}
class Izquierda{
+aplicarMovimiento()
}

Arriba ..|>Movimiento
atras ..|>Movimiento
Derecha ..|>Movimiento
Izquierda ..|>Movimiento

Vehiculo --> Movimiento


@enduml